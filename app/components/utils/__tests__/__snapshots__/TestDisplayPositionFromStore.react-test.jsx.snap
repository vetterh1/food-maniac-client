// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`TestDisplayPositionFromStore should render without throwing an error and match its empty snapshot 1`] = `
ShallowWrapper {
  "complexSelector": ComplexSelector {
    "buildPredicate": [Function],
    "childrenOfNode": [Function],
    "findWhereUnwrapped": [Function],
  },
  "length": 1,
  "node": <div>
    <ul>
        <li>
            <ei
                color="secondary"
                onClick={[Function]}
                tag="button"
            >
                Random
            </ei>
        </li>
        <li>
            <ei
                color="secondary"
                onClick={[Function]}
                tag="button"
            >
                Strasbourg
            </ei>
        </li>
        <li>
            <ei
                color="secondary"
                onClick={[Function]}
                tag="button"
            >
                Lille
            </ei>
        </li>
    </ul>
</div>,
  "nodes": Array [
    <div>
      <ul>
            <li>
                  <ei
                        color="secondary"
                        onClick={[Function]}
                        tag="button"
                  >
                        Random
                  </ei>
            </li>
            <li>
                  <ei
                        color="secondary"
                        onClick={[Function]}
                        tag="button"
                  >
                        Strasbourg
                  </ei>
            </li>
            <li>
                  <ei
                        color="secondary"
                        onClick={[Function]}
                        tag="button"
                  >
                        Lille
                  </ei>
            </li>
      </ul>
</div>,
  ],
  "options": Object {},
  "renderer": ReactShallowRenderer {
    "_instance": ShallowComponentWrapper {
      "_calledComponentWillUnmount": false,
      "_compositeType": 0,
      "_context": Object {},
      "_currentElement": <TestDisplayPositionFromStore
        dispatch={[Function]}
        onClick={[Function]}
/>,
      "_debugID": 1,
      "_hostContainerInfo": null,
      "_hostParent": null,
      "_instance": TestDisplayPositionFromStore {
        "_reactInternalInstance": [Circular],
        "clickLille": [Function],
        "clickRandom": [Function],
        "clickStrasbourg": [Function],
        "context": Object {},
        "dispatchAction": [Function],
        "props": Object {
          "dispatch": [Function],
          "onClick": [Function],
        },
        "refs": Object {},
        "render": [Function],
        "state": null,
        "updater": Object {
          "enqueueCallback": [Function],
          "enqueueCallbackInternal": [Function],
          "enqueueElementInternal": [Function],
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
          "validateCallback": [Function],
        },
      },
      "_mountOrder": 1,
      "_pendingCallbacks": null,
      "_pendingElement": null,
      "_pendingForceUpdate": false,
      "_pendingReplaceState": false,
      "_pendingStateQueue": null,
      "_renderedComponent": NoopInternalComponent {
        "_currentElement": <div>
          <ul>
                    <li>
                              <ei
                                        color="secondary"
                                        onClick={[Function]}
                                        tag="button"
                              >
                                        Random
                              </ei>
                    </li>
                    <li>
                              <ei
                                        color="secondary"
                                        onClick={[Function]}
                                        tag="button"
                              >
                                        Strasbourg
                              </ei>
                    </li>
                    <li>
                              <ei
                                        color="secondary"
                                        onClick={[Function]}
                                        tag="button"
                              >
                                        Lille
                              </ei>
                    </li>
          </ul>
</div>,
        "_debugID": 2,
        "_renderedOutput": <div>
          <ul>
                    <li>
                              <ei
                                        color="secondary"
                                        onClick={[Function]}
                                        tag="button"
                              >
                                        Random
                              </ei>
                    </li>
                    <li>
                              <ei
                                        color="secondary"
                                        onClick={[Function]}
                                        tag="button"
                              >
                                        Strasbourg
                              </ei>
                    </li>
                    <li>
                              <ei
                                        color="secondary"
                                        onClick={[Function]}
                                        tag="button"
                              >
                                        Lille
                              </ei>
                    </li>
          </ul>
</div>,
      },
      "_renderedNodeType": 0,
      "_rootNodeID": 0,
      "_topLevelWrapper": null,
      "_updateBatchNumber": null,
      "_warnedAboutRefsInRender": false,
    },
    "getRenderOutput": [Function],
    "render": [Function],
  },
  "root": [Circular],
  "unrendered": <TestDisplayPositionFromStore
    dispatch={[Function]}
    onClick={[Function]}
/>,
}
`;
