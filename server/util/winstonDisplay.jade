doctype html
html(lang="en")
    head
        title= "FoodManiac Logs"

        script(type="text/javascript", src="//code.jquery.com/jquery-2.1.3.min.js")
        script(type="text/javascript", src="//npmcdn.com/tether@1.2.4/dist/js/tether.min.js")
        link(rel="stylesheet", href="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/css/bootstrap.min.css")
        script(type="text/javascript", src="//maxcdn.bootstrapcdn.com/bootstrap/4.0.0-alpha.6/js/bootstrap.min.js")
        script(type="text/javascript").
            var toggleDetails = function (i) {
                var currentElement = $('#details-' + i);
                if (currentElement.hasClass('hidden-xs-up')) {
                    $('.details').addClass('hidden-xs-up');
                    $('#details-' + i).removeClass('hidden-xs-up');
                } else {
                    $('#details-' + i).addClass('hidden-xs-up');
                }
            };
    body
        .m-3
            h1= "FoodManiac Logs"
            .mt-5
              .row
                .col-2
                  | File name:
                .col-10
                  .row
                    | #{logPath}
              .row
                .col-2
                  | Nb lines:
                .col-10
                  .row
                    | #{lines.length}
            .mt-3
              .row
                .col-2
                  | Usage example:
                .col-10
                  .row
                    | /logs?limit=5000&level=1&minutes=5
            .mt-3
              .row
                .col-2
                  | Filter: limit
                .col-10
                  .row
                    | Uses the 1st n lines in the log files
                  .row
                    | (then apply filters below)
                  .row
                    | Default: 500
            .mt-3
              .row
                .col-2
                  | Filter: level
                .col-10
                  .row
                    | Displays logs with level equal or more critical than value passed
                  .row
                    | error: 0, warn: 1, info: 2, verbose: 3, debug: 4, silly: 5
                  .row
                    | Default: 1 (error + warn)
            .mt-3
              .row
                .col-2
                  | Filter: hours / minutes / seconds
                .col-10
                  .row
                    | Displays logs more recent than x last hours/minutes/seconds
                  .row
                    | /!\ the hours, minutes and seconds parameters are exclusive
                  .row
                    | if the seconds parameter is specified, minutes & hours will be discarded
                  .row
                    | then, if the minutes parameter is specified, hours will be discarded
                  .row
                    | Default: no filter
                    
            table(class="table table-sm table-striped mt-5")
                thead
                    tr
                        if browserContent == true
                            th= "Origin"
                        th= "Level"
                        th= "Message"
                        th= "Timestamp"
                        th= ""
                tbody
                each log, i in lines

                  - var klass=''
                  case log.level
                    when "error"
                      - var klass='table-danger'
                    when "warn"
                      - var klass='table-warning'
                    when "info"
                      - var klass='table-info'
                  tr(class=klass)
                    if browserContent == true
                        td= log.origin
                    td= log.level
                    td= log.message
                    td= log.timestamp
                    td
                      a(onclick="toggleDetails("+i+")")= "details"
                  tr(class="hidden-xs-up details", id="details-" + i)
                    td(colspan=4)
                      each value, key in log
                        if key != 'level' && key != 'message' && key != 'timestamp'
                          div
                            strong= key
                            div(style="word-wrap: break-word;")= JSON.stringify(value)
